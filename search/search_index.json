{"config":{"lang":["en"],"separator":"[\\s\\u200b\\-_,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"My HomeLab","text":""},{"location":"#inspiration","title":"Inspiration","text":"<p>Most of the inspiration comes from this guys here:</p> <ul> <li>Awesome-Selfhosted Website</li> <li>Awesome-Selfhosted GitHub</li> </ul>"},{"location":"#systems-and-other-hardware","title":"Systems and other Hardware","text":"<p>I will List my Hardware here</p>"},{"location":"#nab6-mini-pc","title":"NAB6 mini PC","text":"<p>Main Server, High Power</p> <p></p>"},{"location":"#macmini-late-2012","title":"Macmini Late 2012","text":"<p>Second Server, Low Power</p> <p></p>"},{"location":"#raspberry-pi-4","title":"Raspberry Pi 4","text":"<p>Pi-Hole and such</p> <p></p>"},{"location":"#software","title":"Software","text":""},{"location":"#os","title":"OS","text":"<ul> <li> Proxmox</li> <li> Ubuntu</li> <li> Debian</li> </ul>"},{"location":"#terminal-stuff","title":"Terminal stuff","text":""},{"location":"#nala","title":"Nala","text":"<pre><code>sudo apt install nala\n</code></pre> Explanation <p>is an alternative to <code>apt</code> use <pre><code>sudo nala update &amp;&amp; sudo nala upgrade -yy\n</code></pre> instead of <pre><code>sudo apt update &amp;&amp; sudo apt upgrade -yy\n</code></pre></p>"},{"location":"#neofetch","title":"neofetch","text":"<pre><code>sudo nala install neofetch\n</code></pre> <ul> <li>Shows your Systeminfo</li> </ul> configs <p>See config here: config.conf README.md My .bashrc runs this on every startup  </p>"},{"location":"#docker-containers","title":"Docker Containers","text":"<p>GitHub</p> <p>for the compose files see: docker-compose files in the  GitHub Repo</p>"},{"location":"#table","title":"Table","text":"Name Description Location <code>arr-stack.yml</code> downloading and stuff... docs/scripts-and-snippets/docker-compose files/arr-stack-yml <code>cloudflared.yml</code> Cloudflared DDNS updater docs/scripts-and-snippets/docker-compose files/cloudflared.yml"},{"location":"Docker/Docker/","title":"Docker","text":"<p>show logs in terminal of the Docker conatiner <pre><code>docker logs --timestamps --follow CONTAINERID\n</code></pre></p>"},{"location":"Docker/Docker/#docker-compose-files","title":"docker compose files","text":"<p>Are all here</p>"},{"location":"Docker/Portainer/portainer/","title":"Portainer","text":""},{"location":"Docker/Portainer/portainer/#docker-compose-files-stacks","title":"docker compose files / stacks","text":"<p>Are all here</p>"},{"location":"Docker/Portainer/portainer/#use-one-env-file-and-link-to-it","title":"Use one .env file and Link to it","text":"<p>its very simple just do it like this</p> <pre><code>version: '3' # (1)!\nenv_file:\n  - /path/to/your/.env\n\nservices:\n  your_service:\n    image: your_image\n    environment:\n      - DB_PASSWORD=${DB_PASSWORD}\n    # other service configurations\n</code></pre> <ol> <li> it needs at least version 3 </li> </ol> <p>and then make your <code>.env</code> file look something like this: <pre><code>DB_PASSWORD=KJBIWUJBdwihdbuazowdgh786287z9bidjhqb8hq27hp298h28d\n</code></pre></p> <p>Tip</p> <p>Like this you can create one big <code>.env</code> file, save it somewhere accesible (in my case the folder where I keep all my docker stuff) and then you can link all your containers to it</p>"},{"location":"Docker/Portainer/portainer/#update-portainer-community-edition","title":"Update Portainer Community Edition","text":"<p>Stop and remove your existing Portainer instance. This will not affect your other Docker containers.</p> <pre><code>sudo docker stop portainer &amp;&amp; sudo docker rm portainer\n</code></pre> <p>Pull the latest Portainer-CE image.</p> <pre><code>docker pull portainer/portainer-ce:latest\n</code></pre> <p>Deploy the new Portainer container.</p> <pre><code>docker run -d -p 9000:9000 -p 8000:8000 --name portainer --restart always -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer-ce:latest\n</code></pre> <p>Warning</p> <p>You may need to run these commands as root/sudo if you're not logged in as root.</p>"},{"location":"HomeAssistant/HomeAssistant/","title":"Home Assistant","text":""},{"location":"Minecraft/all-the-mod-9/","title":"All The Mods 9","text":""},{"location":"Minecraft/better-minecraft-4/","title":"Better Minecraft 4","text":""},{"location":"Minecraft/better-minecraft-4/#general-info","title":"General Info","text":""},{"location":"Minecraft/better-minecraft-4/#modpack","title":"Modpack","text":"<p>Better Minecraft 4 [FORGE] </p>"},{"location":"Minecraft/better-minecraft-4/#server-map","title":"Server Map","text":"<p>map.deleven.net</p>"},{"location":"Minecraft/better-minecraft-4/#seed","title":"Seed","text":"<pre><code>393358025\n</code></pre>"},{"location":"Minecraft/better-minecraft-4/#todo","title":"ToDo","text":"<ul> <li> Find Stronghold (Maybe Whitch City?)</li> <li> Make a trashcan</li> <li> Woodland Massions raids</li> <li> Add additional Farms<ul> <li> XP-Farm / Spawner Farm</li> <li> Gunpowder</li> <li> Slime </li> <li> Bamboo- or Kelpfarm for Fuel</li> <li> Chicken XP Farm</li> <li> <p> AFK Fish Farm</p> <p>Tip</p> <p>for java players just hold right click and hit F3 + T it will reset your textures and keep your right click</p> <ul> <li> Explore<ul> <li> Nether</li> <li> End</li> <li> Aether</li> <li> Everdawn</li> <li> Everbright</li> <li> other Dimensione</li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"Minecraft/commands/","title":"Commands","text":""},{"location":"Minecraft/commands/#explanation","title":"Explanation","text":""},{"location":"Minecraft/commands/#target","title":"Target","text":"<ul> <li><code>@a</code> = all players</li> <li><code>@e</code> = all entities</li> <li><code>@p</code> = nearest player</li> <li><code>@r</code> = random player</li> <li><code>@s</code> = self</li> </ul>"},{"location":"Minecraft/commands/#most-used","title":"Most used","text":""},{"location":"Minecraft/commands/#give-something-to-target","title":"Give something to target","text":"Give something to target<pre><code>/give @s cooked_beef 2 # (1)!\n</code></pre> <ol> <li>make sure you qquantify it, otherwise you get a full stack</li> </ol>"},{"location":"Minecraft/commands/#give-a-player-free-experience-points","title":"Give a player free experience points","text":"Enchant something<pre><code>/experience add &lt;player&gt; &lt;amount&gt; # (1)!\n</code></pre> <ol> <li>You need to have the item selected in your Hotbar</li> </ol>"},{"location":"Minecraft/commands/#enchant-something","title":"Enchant something","text":"Enchant something<pre><code>/enchant @s backpacked:marksman # (1)!\n</code></pre> <ol> <li>You need to have the item selected in your Hotbar</li> </ol>"},{"location":"Minecraft/commands/#teleport-somewhere","title":"Teleport somewhere","text":"Teleport to Gundral<pre><code>/tp Gundral # (1)!\n</code></pre> <ol> <li>Will teleport me to the Player Gundral</li> </ol> Teleport to Location<pre><code>/tp -64 76 1973 # (1)!\n</code></pre> <ol> <li>Will teleport me to the coordinates X Y Z</li> </ol>"},{"location":"Minecraft/commands/#change-game-mode","title":"Change game mode","text":"<pre><code>/gamemode &lt;type&gt; [player] # (1)!\n</code></pre> <ol> <li>Change the game mode type to either <code>survival</code>, <code>creative</code>, <code>adventure</code>, or <code>spectator</code>.</li> </ol>"},{"location":"Minecraft/commands/#change-world-time","title":"Change world time","text":"<pre><code>/time set day # (1)!\n</code></pre> <ol> <li>Change the world game time with the following values:     1000 = <code>day</code>     6000 = <code>noon</code>     13000 = <code>night</code>     18000 = <code>midnight</code></li> </ol>"},{"location":"Minecraft/commands/#keep-inventory-after-death","title":"Keep Inventory after death","text":"<pre><code>/gamerule keepInventory true # (1)!\n</code></pre> <ol> <li>You do not lose your inventory items after dying. Again, replace true with false to undo.</li> </ol> <p>daw</p>"},{"location":"Minecraft/commands/#other-commands","title":"Other Commands","text":""},{"location":"Minecraft/commands/#stop-daynight-cycle","title":"Stop day/night cycle","text":"<pre><code>/gamerule doDaylightCycle false # (1)!\n</code></pre> <ol> <li>Turn the day/night cycle off, and change false to <code>true</code> to restart it.</li> </ol>"},{"location":"Minecraft/commands/#set-worldspawn","title":"Set Worldspawn","text":"<pre><code>/setworldspawn # (1)!\n</code></pre> <ol> <li>Sets the Worldspawn to your current location</li> </ol>"},{"location":"Minecraft/commands/#change-difficulty-level","title":"Change difficulty level","text":"<pre><code>/difficulty normal # (1)!\n</code></pre> <ol> <li>Change the difficulty level to either <code>peaceful</code>, <code>easy</code>, <code>normal</code>, or <code>hard</code></li> </ol>"},{"location":"Minecraft/commands/#summon-entities","title":"Summon entities","text":"<pre><code>/summon &lt;entity&gt; [x y z] # (1)!\n</code></pre> <ol> <li><code>Spawns</code> the mod or other entity at the player's location, or chosen coordinates.</li> </ol>"},{"location":"Minecraft/commands/#effects","title":"Effects","text":"<pre><code>/effect give @s [effect] &lt;time&gt; # (1)!\n</code></pre> <ol> <li>Gives you an effect <code>time</code> is in seconds</li> </ol>"},{"location":"Minecraft/commands/#locate","title":"Locate","text":"<pre><code>/locate poi #minecraft:village // (1)!\n</code></pre> <ol> <li>locates things Can also locate <code>biome</code> <code>structure</code> </li> </ol>"},{"location":"Minecraft/commands/#server-commands","title":"Server Commands","text":""},{"location":"Minecraft/commands/#op","title":"OP","text":"<pre><code>/op &lt;playername&gt; # (1)!\n</code></pre> <ol> <li>mkaes the player OP</li> </ol> <pre><code>/deop &lt;playername&gt;\n</code></pre>"},{"location":"Minecraft/commands/#whitelist","title":"Whitelist","text":"<p><pre><code>/whitelist add/remove &lt;playername&gt;\n</code></pre> <pre><code>/whitelist on/off\n</code></pre> <pre><code>/whitelist list\n</code></pre> <pre><code>/whitelist reload #(1)!\n</code></pre></p> <ol> <li>Reloads the list of playernames in white-list.txt from disk (used when white-list.txt has been modified outside of Minecraft).</li> </ol>"},{"location":"Minecraft/commands/#save","title":"Save","text":"<pre><code>/save-all #(1)!\n</code></pre> <ol> <li>Forces the server to write all pending changes to the world to disk.</li> </ol> <pre><code>/save-off #(1)!\n</code></pre> <ol> <li>Disables the server writing to the world files. All changes will temporarily be queued.</li> </ol> <pre><code>/save-on #(1)!\n</code></pre> <ol> <li>Enables the server writing to the world files. This is the default behavior.</li> </ol>"},{"location":"Minecraft/guides/","title":"Guides","text":""},{"location":"Minecraft/guides/#dynmap","title":"Dynmap","text":"<ul> <li>Get in from here</li> <li>Add the downloaded <code>.jar</code> to the <code>mods</code> folder</li> <li>Restart the Server</li> <li> <p>run <pre><code>/dynmap fullrender #(1)!\n</code></pre></p> <ol> <li>All commands can be found here</li> </ol> </li> <li> <p>wait for it to have your world rendered</p> </li> <li>You can acess it via http://your_server_ip:8123</li> </ul>"},{"location":"Minecraft/guides/#usefull-commands","title":"Usefull commands","text":""},{"location":"Minecraft/guides/#icon-list","title":"icon List","text":""},{"location":"Minecraft/guides/#rendering","title":"Rendering","text":"pause dynmap<pre><code>/dynmap pause all #(1)!\n</code></pre> <ol> <li>pause all map rendering (updates and full/radius renders)</li> </ol> resume all map rendering<pre><code>/dynmap pause none #(1)!\n</code></pre> <ol> <li>resume all map rendering</li> </ol> toggle render messages<pre><code>/dynmap quiet #(1)!\n</code></pre> <ol> <li>toggle render messages</li> </ol>"},{"location":"Minecraft/guides/#markers","title":"Markers","text":"adds Marker to current position<pre><code>/dmarker add &lt;label&gt; icon:&lt;icon&gt; set:&lt;set-id&gt; #(1)!\n</code></pre> <ol> <li>adds a new marker at the player's current location, with a given label and optional icon and optional marker set</li> </ol> adds Marker with Label to given location<pre><code>/dmarker add id:&lt;id&gt; &lt;label&gt; icon:&lt;icon&gt; set:&lt;set-id&gt; x:&lt;x-coord&gt; y:&lt;y-coord&gt; z:&lt;z-coord&gt; world:&lt;Worldname&gt; #(1)!\n</code></pre> <ol> <li>adds a new marker at the given location, with the given ID, the given label and optional icon and optional marker set</li> </ol> Example<pre><code>/dmarker add Witch_City icon:skull x:-1658 y:64 z:-1677 world:world\n</code></pre> move Marker<pre><code>/dmarker movehere &lt;label&gt; #(1)!\n</code></pre> <ol> <li>updates the location of the first marker matching the given label to match the current player's position</li> </ol> delete Marker<pre><code>/dmarker delete &lt;label&gt; #(1)!\n</code></pre> <ol> <li>deletes the first marker matching the given label</li> </ol>"},{"location":"Minecraft/server-setup/","title":"Server Setup","text":""},{"location":"Minecraft/server-setup/#install-and-setup-crafty-controller-4-on-proxmox-lxc","title":"Install and Setup Crafty Controller 4 (on Proxmox LXC)","text":"<ol> <li> <p>My Server runs on a Proxmox Ubuntu LXC Container</p> </li> <li> <p>Install Crafty Controller 4 according to the official Guide</p> </li> </ol>"},{"location":"Minecraft/server-setup/#here-is-the-tldr-version-of-this-guide","title":"Here is the TLDR Version of this Guide","text":"<ul> <li> <p>now you should be able to access the Crafty Controller via <code>https://YOUR_SERVER_IP:8443</code></p> <p>Default Login</p> <p>Username: <code>admin</code> Password: <code>crafty</code></p> </li> </ul>"},{"location":"Minecraft/server-setup/#automated-install-script-quick","title":"Automated Install Script (Quick)","text":"<p>Please ensure your distro's packages are up-to-date and Git is present before installing Crafty:</p> <pre><code>sudo apt update &amp;&amp; sudo apt upgrade &amp;&amp; sudo apt install git\n</code></pre> <p>One line installer</p> <pre><code>git clone https://gitlab.com/crafty-controller/crafty-installer-4.0.git &amp;&amp; \\ \ncd crafty-installer-4.0 &amp;&amp; \\ \nsudo ./install_crafty.sh\n</code></pre> <p>Once installation is complete to run Crafty manually run the following. Note that if you used a directory other then the default to install Crafty you will need to cd into that directory.</p> <pre><code>sudo su crafty\n</code></pre> <pre><code>cd /var/opt/minecraft/crafty\n</code></pre> <pre><code>./run_crafty.sh\n</code></pre> <p>Info</p> <p>If you said yes to adding a service file you may run the following to start Crafty <pre><code>sudo systemctl start crafty`\n</code></pre></p> <p>If you added a service file and want to have Crafty start automatically on system boot please run the following:</p> <pre><code>sudo systemctl enable crafty`\n</code></pre>"},{"location":"Minecraft/server-setup/#create-your-servers-in-crafty-controller-4","title":"Create your Servers in Crafty Controller 4","text":"<ul> <li> <p>I used this Guide to create my Better MineCraft 4 Server</p> <ul> <li>Basically it is this<ul> <li>Create a Forge Server</li> </ul> </li> <li>Fill out all the necessary details</li> <li><ul> <li> Modded</li> <li> forge</li> <li> Server Version (Check the one needed from you Modpack)</li> <li> Set the Memory (4/16 seems to work just fine)</li> <li> Set the Server Port</li> <li> Build Server!</li> </ul> </li> <li>Download the Modpack you want from Curse-Forge make sure download the <code>Server Pack</code>, not the regular one     </li> <li> <p>Upload the ZIP File         * </p> <p>Tip</p> <p>you might run in to the issue that it isnt uploading, that means you need to adjust the streamsize in here to 10GB or 100GB (if it is bigger the 1GB): location of config.json<pre><code>sudo nano /var/opt/minecraft/crafty/crafty-4/app/config/config.json\n</code></pre></p> <p></p> <p>If it didn't work</p> <p>If this didn't worked you can also use WinSCP. For this to work, you need to be able to login as <code>crafty</code> user, otherwise the permissions don't work Login via SSH as <code>root</code>, then type: <pre><code>    sudo passwd crafty\n</code></pre> set a new password and use this to login to WinSCP  After this, you can just add the unzipped files from the downloaded server <code>.zip</code> file to the server directly (not the .zip folder, just the files in the folder) If it askes you if it should override the data, you can say <code>yes</code></p> </li> <li> <p>when it autorefreshed and for that matter uploaded, Rightclick to extract</p> </li> <li>Adjust the <code>server.properties</code>, <code>whitelist.json</code> and <code>ops.json</code> (or do it ingame afterwords)<ul> <li>my default server.properties ( Link) are</li> </ul> </li> </ul> server.properties<pre><code>#Minecraft server properties\n#Tue Dec 12 03:04:02 CET 2023\nallow-flight=false\nallow-nether=true\nbroadcast-console-to-ops=false\nbroadcast-rcon-to-ops=false\ndifficulty=normal\nenable-command-block=false\nenable-jmx-monitoring=false\nenable-query=false\nenable-rcon=false\nenable-status=true\nenforce-secure-profile=true\nenforce-whitelist=true\nentity-broadcast-range-percentage=100\nforce-gamemode=false\nfunction-permission-level=2\ngamemode=survival\ngenerate-structures=true\ngenerator-settings={}\nhardcore=false\nhide-online-players=false\ninitial-disabled-packs=\ninitial-enabled-packs=vanilla\nlevel-name=world\nlevel-seed=\nlevel-type=minecraft\\:normal\nmax-chained-neighbor-updates=1000000\nmax-players=4\nmax-tick-time=60000\nmax-world-size=29999984\nmotd=-\\=GSB Better Minecraft 4 Server\\=-\nnetwork-compression-threshold=256\nonline-mode=true\nop-permission-level=4\nplayer-idle-timeout=0\nprevent-proxy-connections=false\npvp=false\nquery.port=25565\nrate-limit=0\nrcon.password=\nrcon.port=25575\nrequire-resource-pack=false\nresource-pack=\nresource-pack-prompt=\nresource-pack-sha1=\nserver-ip=192.168.1.114\nserver-port=25567\nsimulation-distance=15\nspawn-animals=true\nspawn-monsters=true\nspawn-npcs=true\nspawn-protection=0\nsync-chunk-writes=true\ntext-filtering-config=\nuse-native-transport=true\nview-distance=15\nwhite-list=true\n</code></pre> <ul> <li>Adjust the <code>configs</code> with the right </li> <li><code>IP</code></li> <li><code>Port</code></li> <li><code>Autostart</code></li> <li><code>Crash Detection</code> and </li> <li> <p><code>Show on Public Status Page</code> toggle </p> </li> <li> <p>Go to Backups and set, how the Server gets backed up and how many Backups it keeps</p> <p></p> </li> <li> <p>and then Sheduale a Backup (i also added some Warning Messages before)</p> <p></p> </li> </ul> <p>Warning</p> <p>Make sure you have the proper server.properties ( Link) added before you start your server. If the IP in this file (most of the times it should be <code>server-ip=192.168.X.X</code>) is not set correctly definied, it throws an error and won't start the server.</p> <ul> <li>Now go to the Terminal in Crafty Control, add your player to the whitelist with <code>whitelist add &lt;Playername&gt;</code> and Start the Server </li> </ul> </li> </ul>"},{"location":"Minecraft/server-setup/#make-server-accessible-from-outside","title":"Make Server Accessible from outside","text":"<ul> <li> <p>Cloudflare DDNS Updater (Docker)         My current docker-compose.yaml<pre><code>version: \"3\"\nservices:\ncloudflare-ddns-updater:\n    image: favonia/cloudflare-ddns:latest\n    network_mode: host\n    cap_add:\n    - SETUID # Leave this alone, as is\n    - SETGID # Leave this alone, as is\n    cap_drop:\n    - all\n    read_only: true\n    security_opt:\n    - no-new-privileges:true\n    environment:\n    - PUID=1000\n    - PGID=1000\n    - CF_API_TOKEN=${CF_API_TOKEN} # (1)!\n    - DOMAINS=${DOMAINS} # (2)!\n    - PROXIED=true\n    - IP6_PROVIDER=none\n    restart: unless-stopped\n</code></pre></p> <ol> <li>The value of <code>CF_API_TOKEN</code> should be an API token (not an API key), which can be obtained from the API Tokens page. Use the <code>Edit zone DNS</code> template to create and copy a token into the environment file. (The less secure API key authentication is deliberately not supported.)</li> <li>Example: <pre><code>yourdomain.com, *.yourdomain.com`   \n</code></pre> or in the .env file <pre><code>DOMAINS=yourdomain.com, *.yourdomain.com\n</code></pre></li> </ol> </li> <li> <p>This will then create the <code>A-Record</code> for you and keeps it up to date     </p> </li> <li> <p><code>CNAME</code> bmc (Proxied)     </p> </li> <li><code>SRV</code> </li> </ul>"},{"location":"Photography/Backup_Strategy/","title":"Backup Strategy","text":"<pre><code>graph LR\n  Card[CFexpress/XQD/SD Card] --&gt; Client{Client work?};\n  Client --&gt;|Yes| SSD[SSD];\n  Client --&gt;|No| LrC[Lightroom Classic!];\n  SSD --&gt; LrC\n  LrC &lt;--&gt;|Storage| HDD[HDD] \n  HDD &lt;--&gt;|Sync| DS920[NAS 1 - DS920 ]\n  DS920 --&gt;|Backup| PR4100[NAS 2 - PR4100]</code></pre> <ol> <li><code>CFexpress/XQD/SD Card</code> -&gt; <code>SSD</code> (on Site Backup)</li> <li>Import to <code>Lightroom Classic</code> when back, this will add the Pictures to the HDD</li> </ol> <p>Tip</p> <p>For a non-clientwork/personal shoots, I don't backup to an SSD on site, I import directly form the Card to Lightroom Classic</p> <p>Note</p> <p>Here will be a List with the Import Template/Preset, maybe even a downloadable File</p> <ol> <li>HDD will autosync to <code>/photos</code> on the <code>DS920+ NAS</code> via  </li> </ol>"},{"location":"Proxmox/proxmox/","title":"Proxmox","text":""},{"location":"Proxmox/proxmox/#proxmox-helper-scripts","title":"Proxmox Helper Scripts","text":""},{"location":"Proxmox/proxmox/#mounting-nfs-shares-nas-shares","title":"Mounting NFS shares (NAS Shares)","text":"<p>in case you run a Proxmox CT container und need to give it access to NFS (and SMB if needed) it need to be a priviliged container (just doubleclick on <code>Features</code> and enable it on a stopped/Shutdown Container)</p> <p></p>"},{"location":"Proxmox/proxmox/#use-my-script","title":"Use my Script","text":"<ol> <li>Go to home directory<code>cd ~</code></li> <li>create the mount_nfs.sh <pre><code>sudo nano mount_nfs.sh\n</code></pre></li> <li>copy the contents from mount_nfs.sh and ad it Ctrl+X Y Enter to save it</li> <li>make it executable  <pre><code>sudo chmod +x mount_nfs.sh\n</code></pre></li> <li>run it  <pre><code>./mount_nfs.sh`\n</code></pre></li> </ol>"},{"location":"Proxmox/proxmox/#do-it-manually","title":"Do it manually","text":"<p>If that didnt work, ChatGPT gave me this, and that worked always</p> <ol> <li> <p>Update Package Lists: <pre><code>apt update &amp;&amp; apt upgrade -y\n</code></pre></p> </li> <li> <p>Install NFS Client: <pre><code>apt install -y nfs-common\n</code></pre></p> </li> <li> <p>Create Mount Point: <pre><code>mkdir -p /mnt/DS920_docker # (1)!\n</code></pre></p> <ol> <li>This command creates the directory <code>/mnt/DS920_docker</code>.   The <code>-p</code> flag ensures that the command doesn't throw an error if the directory already exists.</li> </ol> </li> <li> <p>Mount the NFS Share: <pre><code>mount -t nfs 192.168.1.222:/volume1/docker /mnt/DS920_docker # (1)!\n</code></pre></p> <ol> <li>This command mounts the NFS share located at <code>192.168.1.222:/volume1/docker</code> to the local directory <code>/mnt/DS920_docker</code>.</li> </ol> </li> <li> <p>Check the Mount: <pre><code>df -h # (1)!\n</code></pre></p> <ol> <li>Verifies that the NFS share is successfully mounted. You should see it listed among the mounted filesystems.</li> </ol> </li> <li> <p>Automount on Boot (Optional):    To ensure the NFS share is mounted automatically on system boot, add an entry to the <code>/etc/fstab</code> file. Open the file using a text editor (e.g., nano):</p> </li> </ol> <pre><code>nano /etc/fstab\n</code></pre> <p>Add the following line at the end:    <pre><code>192.168.1.222:/volume1/docker /mnt/DS920_docker nfs defaults 0 0\n</code></pre></p> <p>Save and exit the text editor.</p> <ol> <li>Unmount NFS Share (If Needed):    To unmount the NFS share, use the following command:    <pre><code>umount /mnt/DS920_docker\n</code></pre></li> </ol> <p>Now, your Synology NAS NFS share should be successfully mounted to <code>/mnt/DS920_docker</code> on your Debian Proxmox CT.  If you added an entry to <code>/etc/fstab</code>, the share will also be mounted automatically upon system boot.  </p> <p>My <code>fstab</code> looks like this</p> <pre><code># UNCONFIGURED FSTAB FOR BASE SYSTEM\n192.168.1.115:/nfs/MediaHub_PR4100 /mnt/PR4100_MediaHUB nfs defaults 0 0\n192.168.1.222:/volume1/docker /mnt/DS920_docker nfs defaults 0 0\n</code></pre>"},{"location":"Proxmox/proxmox/#access-proxmox-via-cloudflare-tunnels","title":"Access Proxmox via Cloudflare Tunnels","text":"<p>Make sure <code>No TLS Verify</code> is checked </p>"},{"location":"Proxmox/proxmox/#grow-file-size","title":"Grow File Size","text":"<p>Resize (add storage) in the Hardware Section, then</p> <p>Hardware  Harddisk  Disk Action  Resize</p> <p>Then open the console and type</p> <pre><code>sudo growpart /dev/sda 3\n</code></pre> <p>And then allocate it with</p> <pre><code>sudo resize2fs /dev/sda3\n</code></pre>"},{"location":"Website%20Stuff/MkDocs/mkdocs/","title":"Material for MkDocs","text":""},{"location":"Website%20Stuff/MkDocs/mkdocs/#official-documentation","title":"Official Documentation","text":"<ul> <li> Material for MkDocs</li> </ul>"},{"location":"Website%20Stuff/MkDocs/mkdocs/#useful-stuff","title":"Useful Stuff","text":"<ul> <li>  icon search Reference</li> <li> Admonition Types (Tips, Warnings, etc) Reference</li> <li> Annotations Reference</li> </ul>"},{"location":"Website%20Stuff/MkDocs/mkdocs/#edit-website","title":"Edit Website","text":""},{"location":"Website%20Stuff/MkDocs/mkdocs/#in-github","title":"in  GitHub","text":"<p>Info</p> <p>You can also edit the page directly on  GitHub.  GitHub Actions will update the Live Page after you commit the Changes</p>"},{"location":"Website%20Stuff/MkDocs/mkdocs/#in-vs-code","title":"in  VS Code","text":"<ol> <li> <p>Open Website in  VS CODE</p> <p>Open VSCode via Terminal</p> <ul> <li>Open Terminal</li> <li> <p>Navigate to you Site</p> <pre><code>cd X:\\OneDrive\\Documents\\GitHub\\mkdocs-material # (1)!\n</code></pre> <ol> <li>Example</li> </ol> <p>open  VS Code on this location with </p> <pre><code>code . # (1)!\n</code></pre> <ol> <li>minde the Space between <code>code</code> and <code>.</code></li> </ol> </li> </ul> <p>Open VSCode via GitHub Desktop</p> <p>I usually access it via  GitHub Desktop</p> <p></p> </li> <li> <p>Preview on http://localhost:8000/ (Just type the following commands in the Terminal in VS Code)</p> Command<pre><code>mkdocs serve\n</code></pre> Expected Output <pre><code>PS X:\\OneDrive\\Documents\\GitHub\\mkdocs-material&gt; mkdocs serve # (1)!\nINFO    -  Building documentation...\nINFO    -  Cleaning site directory\nINFO    -  Documentation built in 0.44 seconds\nINFO    -  [20:07:01] Watching paths for changes: 'docs', 'mkdocs.yml'\nINFO    -  [20:07:01] Serving on http://127.0.0.1:8000/\nINFO    -  [20:07:03] Browser connected: http://localhost:8000/\n</code></pre> <ol> <li>This Command will run the live preview on http://localhost:8000/ , you can exit it with Ctrl+C </li> </ol> </li> <li> <p><code>Commit &amp; Snyc</code> to  GitHub Repo (1)</p> <ol> <li> <p>Can also be done in  GitHub Desktop</p> <p><code>Commit</code></p> <p></p> <p><code>Push</code></p> <p></p> </li> </ol> <p></p> </li> </ol>"},{"location":"Website%20Stuff/MkDocs/mkdocs/#plugins","title":"Plugins","text":"<p>If you add Plugins, you need to add them in the <code>ci.yml</code> as well like this:</p> <pre><code>name: ci \non:\n  push:\n    branches:\n      - master \n      - main\npermissions:\n  contents: write\njobs:\n  deploy:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v4\n      - name: Configure Git Credentials\n        run: |\n          git config user.name github-actions[bot]\n          git config user.email 41898282+github-actions[bot]@users.noreply.github.com\n      - uses: actions/setup-python@v4\n        with:\n          python-version: 3.x\n          fetch-depth: 0\n      - run: echo \"cache_id=$(date --utc '+%V')\" &gt;&gt; $GITHUB_ENV \n      - uses: actions/cache@v3\n        with:\n          key: mkdocs-material-${{ env.cache_id }}\n          path: .cache\n          restore-keys: |\n            mkdocs-material-\n      - run: pip install mkdocs-material\n      - run: pip install mkdocs-material mkdocs-git-revision-date-localized-plugin\n      - run: pip install mkdocs-git-committers-plugin-2\n      - run: pip install mkdocs-minify-plugin\n      - run: mkdocs gh-deploy --force\n</code></pre>"},{"location":"blog/","title":"Blog","text":""},{"location":"blog/2023/12/13/just-a-test-blogpost/","title":"Just a Test Blogpost","text":"<p>Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.</p>"},{"location":"scripts-and-snippets/neofetch/","title":"Index","text":"<p>This config lives in </p> <p><pre><code>/root/.config/neofetch/config.conf\n</code></pre> if you only have a <code>root</code> user</p> <p>or in </p> <p><pre><code>/home/$USER/.config/neofetch/config.conf\n</code></pre> if you have a <code>home</code> for your users</p>"},{"location":"blog/archive/2023/","title":"2023","text":""},{"location":"blog/category/blog/","title":"Blog","text":""}]}